#include "Generator.h"
#include <iostream>
#include <fstream>
#include <ctime>
#include <vector>
#include <random>


DB::DB* DB::generateDB(int count) {
    DB* db = new DB();
    
    std::vector<std::string> N, S, P, c;
    int age, id = 1, sec, N_num, c_num;
    std::string gender;

    N = {
        "Александр", "Иван", "Дмитрий", "Михаил", "Артем", "Николай", "Сергей", "Андрей", "Владимир", "Кирилл",
        "Егор", "Павел", "Алексей", "Денис", "Роман", "Виктор", "Юрий", "Василий", "Григорий", "Игорь",
        "Максим", "Олег", "Антон", "Аркадий", "Тимур", "Станислав", "Константин", "Валентин", "Евгений",
        "Никита", "Валерий", "Георгий", "Даниил", "Альберт", "Руслан", "Леонид", "Федор", "Виталий", "Степан",
        "Илья", "Петр", "Владислав", "Арсений", "Геннадий", "Вячеслав", "Валериан", "Ярослав", "Семен", "Борис",
        "Захар", "Анна", "Екатерина", "Ольга", "Ирина", "Наталья", "Татьяна", "Александра", "Виктория", "Мария",
        "Елена", "Алиса", "Светлана", "Ангелина", "Валерия", "Арина", "Ксения", "Полина", "Дарья", "Юлия",
        "Надежда", "Людмила", "Вероника", "Антонина", "Евгения", "Анжелика", "Лариса", "Милана", "София",
        "Нина", "Маргарита", "Инна", "Альбина", "Галина", "Елизавета", "Зоя", "Аннастасия", "Василиса",
        "Лидия", "Марина", "Регина", "Альфия", "Яна", "Аделина", "Анита", "Ника", "Лина", "Эвелина",
        "Руфина", "Валентина", "Алька"
    };

    S = {
        "Иванов", "Петров", "Смирнов", "Козлов", "Федоров", "Соколов", "Михайлов", "Васнецов", "Коваленко", 
        "Николаев", "Захаров", "Григорьев", "Егоров", "Дмитриев", "Кузнецов", "Волков", "Александров", 
        "Морозов", "Новиков", "Краснов", "Беляев", "Тимофеев", "Орлов", "Андреев", "Лебедев", "Казанцев", 
        "Романов", "Зайцев", "Герасимов", "Павлов", "Воробьев", "Степанов", "Яковлев", "Сорокин", "Богданов", 
        "Селезнев", "Кудряшов", "Гусев", "Титов", "Калинин", "Кирсанов", "Щербаков", "Антонов", "Фомин", 
        "Горбунов", "Макаров", "Виноградов", "Громов", "Логинов", "Савельев", "Тарасов", "Жуков", "Шишкин", 
        "Игнатьев", "Фролов", "Ларин", "Ефимов", "Лихачев", "Малахов", "Журавлев", "Баранов", "Чернов", 
        "Зверев", "Комаров", "Денисов", "Бирюков", "Шаров", "Исаев", "Сидоров", "Власов", "Якушев", 
        "Колесников", "Гришин", "Кирпичников", "Беспалов", "Мельников", "Лазарев", "Родионов", "Шестаков", 
        "Коновалов", "Медведев", "Поляков", "Черняев", "Осипов", "Лукин", "Ситников", "Симонов", "Панфилов", 
        "Михеев", "Дорофеев", "Глебов", "Князев", "Сазонов", "Яшин", "Белов", "Филатов", "Воронин", 
        "Сурков", "Бондарев", "Артемьев", "Гордеев", "Панов", "Веселов", "Филиппов", "Прохоров", "Лыткин", 
        "Тихонов", "Ларионов", "Чистяков", "Мартынов", "Марков", "Ермаков", "Дружинин", "Абрамов", "Горшков", 
        "Гриценко", "Киселев", "Наумов", "Стрелков", "Витаев", "Вагин", "Лавров", "Барсуков", "Дементьев", 
        "Кулагин", "Рожков", "Осипов", "Шубин", "Миронов", "Фетисов", "Доронин", "Булгаков", "Верещагин", 
        "Горбачев", "Левин", "Трофимов", "Фокин", "Козлов", "Аверин", "Горбатов", "Перов", "Турчин", "Минаев", 
        "Степанян", "Никонов", "Котов", "Якубов", "Селиверстов", "Русаков", "Лапин", "Шестов", "Константинов", 
        "Матвеев", "Калинкин", "Поздняков", "Ситдиков", "Бочаров", "Жданов", "Литвинов", "Афанасьев", 
        "Пономарев", "Буров", "Суворов", "Агафонов", "Васильев", "Тимофеев", "Муравьев", "Карпов", "Максимов", 
        "Полянин", "Лысенко", "Фомичев", "Гончаров", "Журавев", "Белозеров", "Воронов", "Терентьев", "Демидов", 
        "Горшков", "Русанов", "Шилов", "Леськов", "Тетерин", "Винокуров", "Кудрявцев", "Бирюков", "Зимин", 
        "Киреев", "Волочков", "Шубин", "Верещагин", "Греков", "Кошелев", "Панов", "Селиверстов", "Лапшин", 
        "Миронов", "Шевцов", "Гусев", "Тихомиров"
    };

    P = {
        "Иванович", "Александрович", "Сергеевич", "Дмитриевич", "Анатольевич", "Николаевич", "Петрович", 
        "Владимирович", "Артемович", "Аркадьевич", "Михайлович", "Егорович", "Андреевич", "Валентинович", 
        "Алексеевич", "Викторович", "Ярославович", "Константинович", "Григорьевич", "Олегович", "Романович", 
        "Игоревич", "Евгеньевич", "Тимурович", "Всеволодович", "Станиславович", "Витальевич", "Русланович", 
        "Валерьевич", "Леонидович", "Федорович", "Павлович", "Януариевич", "Геннадьевич", "Денисович", 
        "Захарович", "Арсеньевич", "Степанович", "Тихонович", "Борисович", "Варламович", "Яковлевич", 
        "Лаврентьевич", "Вячеславович", "Савельевич", "Глебович", "Лазаревич", "Родионович", "Владиславович", 
        "Герасимович", "Анфимович", "Кириллович", "Вениаминович", "Витольдович", "Мстиславович", "Данилович", 
        "Всеславович", "Назарович", "Тарасович", "Максимович", "Несторович", "Рустамович", "Венедиктович", 
        "Платонович", "Валериевич", "Елисеевич", "Семенович", "Валерьянович", "Фомич", "Трофимович", 
        "Анисимович", "Арнольдович", "Владленович", "Наумович", "Тарасович", "Климентович", "Карлович", 
        "Анатолиевич", "Леонидович", "Георгиевич", "Викентиевич", "Нестерович", "Валентинович", 
        "Станиславович", "Архипович", "Леонидович", "Всеволодович", "Исаакович", "Гаврилович", 
        "Рудольфович", "Витович", "Вениаминович", "Эдуардович", "Никандрович", "Мартынович", 
        "Августович", "Лукьянович", "Никитович", "Алексеевич", "Варфоломеевич"
    };

    c = {
        "Москва", "Санкт-Петербург", "Екатеринбург", "Краснодар", "Казань", 
        "Новосибирск", "Ростов", "Сочи", "Уфа"
    };

    std::mt19937 rng(static_cast<unsigned int>(std::time(0)));
    std::vector<int> num(c.size(), 0);

    for (int i = 0; i < count; i++) {
        c_num = std::uniform_int_distribution<int>(0, c.size() - 1)(rng);
        N_num = std::uniform_int_distribution<int>(0, N.size() - 1)(rng);

        std::string randomName = N[N_num];
        std::string randomSurname = S[std::uniform_int_distribution<int>(0, S.size() - 1)(rng)];
        std::string randomPatronymic = P[std::uniform_int_distribution<int>(0, P.size() - 1)(rng)];
        std::string city = c[c_num];
        num[c_num]++;
        int randomNumber = num[c_num];

        if (N_num >= N.size() / 2) {
            gender = 'G';
            randomSurname += "a";
            if (randomPatronymic.size() >= 3) {
                randomPatronymic.pop_back();
                randomPatronymic.pop_back();
                randomPatronymic.pop_back();
                randomPatronymic.pop_back();
                randomPatronymic += "на";
            }
        } else {
            gender = 'M';
        }
        age = std::uniform_int_distribution<int>(18, 60)(rng);
        sec = std::uniform_int_distribution<int>(7800, 21600)(rng);
        //id = (c_num+1)*100000000 + (gender == "M")*10000000 + randomNumber;
        auto runner = new Runner(id++, randomName, randomSurname, randomPatronymic, gender, age, randomNumber, city, sec);
        db->add(runner);
    }

    return db;
}